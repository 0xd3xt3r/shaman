#ifndef H_SYSCALL_DATA_H
#define H_SYSCALL_DATA_H

#include <cstdint>
#include <string>

#define SYSCALL_MAXARGS 6
#define MAX_SYSCALL_NUM 540

enum sysarg_t
{
  ARG_INT,
  ARG_PTR,
  ARG_STR,
  ARG_UNKNOWN
};

struct SyscallEntry
{
  const char *name;
  uint8_t nargs;
  // SYSCALL_ID args[SYSCALL_MAXARGS];
};


extern SyscallEntry syscalls[MAX_SYSCALL_NUM];


enum AMD64_SYSCALL : int16_t {
    IO_SETUP = 0,
    IO_DESTROY = 1,
    IO_SUBMIT = 2,
    IO_CANCEL = 3,
    IO_GETEVENTS = 4,
    SETXATTR = 5,
    LSETXATTR = 6,
    FSETXATTR = 7,
    GETXATTR = 8,
    LGETXATTR = 9,
    FGETXATTR = 10,
    LISTXATTR = 11,
    LLISTXATTR = 12,
    FLISTXATTR = 13,
    REMOVEXATTR = 14,
    LREMOVEXATTR = 15,
    FREMOVEXATTR = 16,
    GETCWD = 17,
    LOOKUP_DCOOKIE = 18,
    EVENTFD2 = 19,
    EPOLL_CREATE1 = 20,
    EPOLL_CTL = 21,
    EPOLL_PWAIT = 22,
    DUP = 23,
    DUP3 = 24,
    FCNTL = 25,
    INOTIFY_INIT1 = 26,
    INOTIFY_ADD_WATCH = 27,
    INOTIFY_RM_WATCH = 28,
    IOCTL = 29,
    IOPRIO_SET = 30,
    IOPRIO_GET = 31,
    FLOCK = 32,
    MKNODAT = 33,
    MKDIRAT = 34,
    UNLINKAT = 35,
    SYMLINKAT = 36,
    LINKAT = 37,
    RENAMEAT = 38,
    UMOUNT2 = 39,
    MOUNT = 40,
    PIVOT_ROOT = 41,
    NFSSERVCTL = 42,
    STATFS = 43,
    FSTATFS = 44,
    TRUNCATE = 45,
    FTRUNCATE = 46,
    FALLOCATE = 47,
    FACCESSAT = 48,
    CHDIR = 49,
    FCHDIR = 50,
    CHROOT = 51,
    FCHMOD = 52,
    FCHMODAT = 53,
    FCHOWNAT = 54,
    FCHOWN = 55,
    OPENAT = 56,
    CLOSE = 57,
    VHANGUP = 58,
    PIPE2 = 59,
    QUOTACTL = 60,
    GETDENTS64 = 61,
    LSEEK = 62,
    READ = 63,
    WRITE = 64,
    READV = 65,
    WRITEV = 66,
    PREAD64 = 67,
    PWRITE64 = 68,
    PREADV = 69,
    PWRITEV = 70,
    SENDFILE = 71,
    PSELECT6 = 72,
    PPOLL = 73,
    SIGNALFD4 = 74,
    VMSPLICE = 75,
    SPLICE = 76,
    TEE = 77,
    READLINKAT = 78,
    NEWFSTATAT = 79,
    FSTAT = 80,
    SYNC = 81,
    FSYNC = 82,
    FDATASYNC = 83,
    SYNC_FILE_RANGE2 = 84,
    SYNC_FILE_RANGE = 84,
    TIMERFD_CREATE = 85,
    TIMERFD_SETTIME = 86,
    TIMERFD_GETTIME = 87,
    UTIMENSAT = 88,
    ACCT = 89,
    CAPGET = 90,
    CAPSET = 91,
    PERSONALITY = 92,
    EXIT = 93,
    EXIT_GROUP = 94,
    WAITID = 95,
    SET_TID_ADDRESS = 96,
    UNSHARE = 97,
    FUTEX = 98,
    SET_ROBUST_LIST = 99,
    GET_ROBUST_LIST = 100,
    NANOSLEEP = 101,
    GETITIMER = 102,
    SETITIMER = 103,
    KEXEC_LOAD = 104,
    INIT_MODULE = 105,
    DELETE_MODULE = 106,
    TIMER_CREATE = 107,
    TIMER_GETTIME = 108,
    TIMER_GETOVERRUN = 109,
    TIMER_SETTIME = 110,
    TIMER_DELETE = 111,
    CLOCK_SETTIME = 112,
    CLOCK_GETTIME = 113,
    CLOCK_GETRES = 114,
    CLOCK_NANOSLEEP = 115,
    SYSLOG = 116,
    PTRACE = 117,
    SCHED_SETPARAM = 118,
    SCHED_SETSCHEDULER = 119,
    SCHED_GETSCHEDULER = 120,
    SCHED_GETPARAM = 121,
    SCHED_SETAFFINITY = 122,
    SCHED_GETAFFINITY = 123,
    SCHED_YIELD = 124,
    SCHED_GET_PRIORITY_MAX = 125,
    SCHED_GET_PRIORITY_MIN = 126,
    SCHED_RR_GET_INTERVAL = 127,
    KILL = 129,
    TKILL = 130,
    TGKILL = 131,
    SIGALTSTACK = 132,
    RT_SIGSUSPEND = 133,
    RT_SIGACTION = 134,
    RT_SIGPROCMASK = 135,
    RT_SIGPENDING = 136,
    RT_SIGTIMEDWAIT = 137,
    RT_SIGQUEUEINFO = 138,
    RT_SIGRETURN = 139,
    SETPRIORITY = 140,
    GETPRIORITY = 141,
    REBOOT = 142,
    SETREGID = 143,
    SETGID = 144,
    SETREUID = 145,
    SETUID = 146,
    SETRESUID = 147,
    GETRESUID = 148,
    SETRESGID = 149,
    GETRESGID = 150,
    SETFSUID = 151,
    SETFSGID = 152,
    TIMES = 153,
    SETPGID = 154,
    GETPGID = 155,
    GETSID = 156,
    SETSID = 157,
    GETGROUPS = 158,
    SETGROUPS = 159,
    UNAME = 160,
    SETHOSTNAME = 161,
    SETDOMAINNAME = 162,
    GETRLIMIT = 163,
    SETRLIMIT = 164,
    GETRUSAGE = 165,
    UMASK = 166,
    PRCTL = 167,
    GETCPU = 168,
    GETTIMEOFDAY = 169,
    SETTIMEOFDAY = 170,
    ADJTIMEX = 171,
    GETPID = 172,
    GETPPID = 173,
    GETUID = 174,
    GETEUID = 175,
    GETGID = 176,
    GETEGID = 177,
    GETTID = 178,
    SYSINFO = 179,
    MQ_OPEN = 180,
    MQ_UNLINK = 181,
    MQ_TIMEDSEND = 182,
    MQ_TIMEDRECEIVE = 183,
    MQ_NOTIFY = 184,
    MQ_GETSETATTR = 185,
    MSGGET = 186,
    MSGCTL = 187,
    MSGRCV = 188,
    MSGSND = 189,
    SEMGET = 190,
    SEMCTL = 191,
    SEMTIMEDOP = 192,
    SEMOP = 193,
    SHMGET = 194,
    SHMCTL = 195,
    SHMAT = 196,
    SHMDT = 197,
    SOCKET = 198,
    SOCKETPAIR = 199,
    BIND = 200,
    LISTEN = 201,
    ACCEPT = 202,
    CONNECT = 203,
    GETSOCKNAME = 204,
    GETPEERNAME = 205,
    SENDTO = 206,
    RECVFROM = 207,
    SETSOCKOPT = 208,
    GETSOCKOPT = 209,
    SHUTDOWN = 210,
    SENDMSG = 211,
    RECVMSG = 212,
    READAHEAD = 213,
    BRK = 214,
    MUNMAP = 215,
    MREMAP = 216,
    ADD_KEY = 217,
    REQUEST_KEY = 218,
    KEYCTL = 219,
    CLONE = 220,
    EXECVE = 221,
    MMAP = 222,
    FADVISE64 = 223,
    SWAPON = 224,
    SWAPOFF = 225,
    MPROTECT = 226,
    MSYNC = 227,
    MLOCK = 228,
    MUNLOCK = 229,
    MLOCKALL = 230,
    MUNLOCKALL = 231,
    MINCORE = 232,
    MADVISE = 233,
    REMAP_FILE_PAGES = 234,
    MBIND = 235,
    GET_MEMPOLICY = 236,
    SET_MEMPOLICY = 237,
    MIGRATE_PAGES = 238,
    MOVE_PAGES = 239,
    RT_TGSIGQUEUEINFO = 240,
    PERF_EVENT_OPEN = 241,
    ACCEPT4 = 242,
    RECVMMSG = 243,
    WAIT4 = 260,
    PRLIMIT64 = 261,
    FANOTIFY_INIT = 262,
    FANOTIFY_MARK = 263,
    NAME_TO_HANDLE_AT = 264,
    OPEN_BY_HANDLE_AT = 265,
    CLOCK_ADJTIME = 266,
    SYNCFS = 267,
    SETNS = 268,
    SENDMMSG = 269,
    PROCESS_VM_READV = 270,
    PROCESS_VM_WRITEV = 271,
    KCMP = 272,
    FINIT_MODULE = 273,
    SCHED_SETATTR = 274,
    SCHED_GETATTR = 275,
    GETRANDOM = 278,
    MAX_CALL = 279
};

/* An unknown GDB syscall, not a real syscall.  */
class SysCallId {

public:
  enum syscall_no : std::int16_t
  {

    NO_SYSCALL = -1,

    RESTART_SYSCALL = 0,
    EXIT = 1,
    FORK = 2,
    READ = 3,
    WRITE = 4,
    OPEN = 5,
    CLOSE = 6,
    WAITPID = 7,
    CREAT = 8,
    LINK = 9,
    UNLINK = 10,
    EXECVE = 11,
    CHDIR = 12,
    TIME = 13,
    MKNOD = 14,
    CHMOD = 15,
    LCHOWN16 = 16,
    NI_SYSCALL17 = 17,
    STAT = 18,
    LSEEK = 19,
    GETPID = 20,
    MOUNT = 21,
    OLDUMOUNT = 22,
    SETUID16 = 23,
    GETUID16 = 24,
    STIME = 25,
    PTRACE = 26,
    ALARM = 27,
    FSTAT = 28,
    PAUSE = 29,
    UTIME = 30,
    NI_SYSCALL31 = 31,
    NI_SYSCALL32 = 32,
    ACCESS = 33,
    NICE = 34,
    NI_SYSCALL35 = 35,
    SYNC = 36,
    KILL = 37,
    RENAME = 38,
    MKDIR = 39,
    RMDIR = 40,
    DUP = 41,
    PIPE = 42,
    TIMES = 43,
    NI_SYSCALL44 = 44,
    BRK = 45,
    SETGID16 = 46,
    GETGID16 = 47,
    SIGNAL = 48,
    GETEUID16 = 49,
    GETEGID16 = 50,
    ACCT = 51,
    UMOUNT = 52,
    NI_SYSCALL53 = 53,
    IOCTL = 54,
    FCNTL = 55,
    NI_SYSCALL56 = 56,
    SETPGID = 57,
    NI_SYSCALL58 = 58,
    OLDUNAME = 59,
    UMASK = 60,
    CHROOT = 61,
    USTAT = 62,
    DUP2 = 63,
    GETPPID = 64,
    GETPGRP = 65,
    SETSID = 66,
    SIGACTION = 67,
    SGETMASK = 68,
    SSETMASK = 69,
    SETREUID16 = 70,
    SETREGID16 = 71,
    SIGSUSPEND = 72,
    SIGPENDING = 73,
    SETHOSTNAME = 74,
    SETRLIMIT = 75,
    OLD_GETRLIMIT = 76,
    GETRUSAGE = 77,
    GETTIMEOFDAY = 78,
    SETTIMEOFDAY = 79,
    GETGROUPS16 = 80,
    SETGROUPS16 = 81,
    OLD_SELECT = 82,
    SYMLINK = 83,
    LSTAT = 84,
    READLINK = 85,
    USELIB = 86,
    SWAPON = 87,
    REBOOT = 88,
    OLD_READDIR = 89,
    OLD_MMAP = 90,
    MUNMAP = 91,
    TRUNCATE = 92,
    FTRUNCATE = 93,
    FCHMOD = 94,
    FCHOWN16 = 95,
    GETPRIORITY = 96,
    SETPRIORITY = 97,
    NI_SYSCALL98 = 98,
    STATFS = 99,
    FSTATFS = 100,
    IOPERM = 101,
    SOCKETCALL = 102,
    SYSLOG = 103,
    SETITIMER = 104,
    GETITIMER = 105,
    NEWSTAT = 106,
    NEWLSTAT = 107,
    NEWFSTAT = 108,
    UNAME = 109,
    IOPL = 110,
    VHANGUP = 111,
    NI_SYSCALL112 = 112,
    VM86OLD = 113,
    WAIT4 = 114,
    SWAPOFF = 115,
    SYSINFO = 116,
    IPC = 117,
    FSYNC = 118,
    SIGRETURN = 119,
    CLONE = 120,
    SETDOMAINNAME = 121,
    NEWUNAME = 122,
    MODIFY_LDT = 123,
    ADJTIMEX = 124,
    MPROTECT = 125,
    SIGPROCMASK = 126,
    NI_SYSCALL127 = 127,
    INIT_MODULE = 128,
    DELETE_MODULE = 129,
    NI_SYSCALL130 = 130,
    QUOTACTL = 131,
    GETPGID = 132,
    FCHDIR = 133,
    BDFLUSH = 134,
    SYSFS = 135,
    PERSONALITY = 136,
    NI_SYSCALL137 = 137,
    SETFSUID16 = 138,
    SETFSGID16 = 139,
    LLSEEK = 140,
    GETDENTS = 141,
    SELECT = 142,
    FLOCK = 143,
    MSYNC = 144,
    READV = 145,
    WRITEV = 146,
    GETSID = 147,
    FDATASYNC = 148,
    SYSCTL = 149,
    MLOCK = 150,
    MUNLOCK = 151,
    MLOCKALL = 152,
    MUNLOCKALL = 153,
    SCHED_SETPARAM = 154,
    SCHED_GETPARAM = 155,
    SCHED_SETSCHEDULER = 156,
    SCHED_GETSCHEDULER = 157,
    SCHED_YIELD = 158,
    SCHED_GET_PRIORITY_MAX = 159,
    SCHED_GET_PRIORITY_MIN = 160,
    SCHED_RR_GET_INTERVAL = 161,
    NANOSLEEP = 162,
    MREMAP = 163,
    SETRESUID16 = 164,
    GETRESUID16 = 165,
    VM86 = 166,
    NI_SYSCALL167 = 167,
    POLL = 168,
    NFSSERVCTL = 169,
    SETRESGID16 = 170,
    GETRESGID16 = 171,
    PRCTL = 172,
    RT_SIGRETURN = 173,
    RT_SIGACTION = 174,
    RT_SIGPROCMASK = 175,
    RT_SIGPENDING = 176,
    RT_SIGTIMEDWAIT = 177,
    RT_SIGQUEUEINFO = 178,
    RT_SIGSUSPEND = 179,
    PREAD64 = 180,
    PWRITE64 = 181,
    CHOWN16 = 182,
    GETCWD = 183,
    CAPGET = 184,
    CAPSET = 185,
    SIGALTSTACK = 186,
    SENDFILE = 187,
    NI_SYSCALL188 = 188,
    NI_SYSCALL189 = 189,
    VFORK = 190,
    GETRLIMIT = 191,
    MMAP2 = 192,
    TRUNCATE64 = 193,
    FTRUNCATE64 = 194,
    STAT64 = 195,
    LSTAT64 = 196,
    FSTAT64 = 197,
    LCHOWN = 198,
    GETUID = 199,
    GETGID = 200,
    GETEUID = 201,
    GETEGID = 202,
    SETREUID = 203,
    SETREGID = 204,
    GETGROUPS = 205,
    SETGROUPS = 206,
    FCHOWN = 207,
    SETRESUID = 208,
    GETRESUID = 209,
    SETRESGID = 210,
    GETRESGID = 211,
    CHOWN = 212,
    SETUID = 213,
    SETGID = 214,
    SETFSUID = 215,
    SETFSGID = 216,
    PIVOT_ROOT = 217,
    MINCORE = 218,
    MADVISE = 219,
    GETDENTS64 = 220,
    FCNTL64 = 221,
    NI_SYSCALL222 = 222,
    NI_SYSCALL223 = 223,
    GETTID = 224,
    READAHEAD = 225,
    SETXATTR = 226,
    LSETXATTR = 227,
    FSETXATTR = 228,
    GETXATTR = 229,
    LGETXATTR = 230,
    FGETXATTR = 231,
    LISTXATTR = 232,
    LLISTXATTR = 233,
    FLISTXATTR = 234,
    REMOVEXATTR = 235,
    LREMOVEXATTR = 236,
    FREMOVEXATTR = 237,
    TKILL = 238,
    SENDFILE64 = 239,
    FUTEX = 240,
    SCHED_SETAFFINITY = 241,
    SCHED_GETAFFINITY = 242,
    SET_THREAD_AREA = 243,
    GET_THREAD_AREA = 244,
    IO_SETUP = 245,
    IO_DESTROY = 246,
    IO_GETEVENTS = 247,
    IO_SUBMIT = 248,
    IO_CANCEL = 249,
    FADVISE64 = 250,
    NI_SYSCALL251 = 251,
    EXIT_GROUP = 252,
    LOOKUP_DCOOKIE = 253,
    EPOLL_CREATE = 254,
    EPOLL_CTL = 255,
    EPOLL_WAIT = 256,
    REMAP_FILE_PAGES = 257,
    SET_TID_ADDRESS = 258,
    TIMER_CREATE = 259,
    TIMER_SETTIME = 260,
    TIMER_GETTIME = 261,
    TIMER_GETOVERRUN = 262,
    TIMER_DELETE = 263,
    CLOCK_SETTIME = 264,
    CLOCK_GETTIME = 265,
    CLOCK_GETRES = 266,
    CLOCK_NANOSLEEP = 267,
    STATFS64 = 268,
    FSTATFS64 = 269,
    TGKILL = 270,
    UTIMES = 271,
    FADVISE64_64 = 272,
    NI_SYSCALL273 = 273,
    MBIND = 274,
    GET_MEMPOLICY = 275,
    SET_MEMPOLICY = 276,
    MQ_OPEN = 277,
    MQ_UNLINK = 278,
    MQ_TIMEDSEND = 279,
    MQ_TIMEDRECEIVE = 280,
    MQ_NOTIFY = 281,
    MQ_GETSETATTR = 282,
    KEXEC_LOAD = 283,
    WAITID = 284,
    NI_SYSCALL285 = 285,
    ADD_KEY = 286,
    REQUEST_KEY = 287,
    KEYCTL = 288,
    IOPRIO_SET = 289,
    IOPRIO_GET = 290,
    INOTIFY_INIT = 291,
    INOTIFY_ADD_WATCH = 292,
    INOTIFY_RM_WATCH = 293,
    MIGRATE_PAGES = 294,
    OPENAT = 295,
    MKDIRAT = 296,
    MKNODAT = 297,
    FCHOWNAT = 298,
    FUTIMESAT = 299,
    FSTATAT64 = 300,
    UNLINKAT = 301,
    RENAMEAT = 302,
    LINKAT = 303,
    SYMLINKAT = 304,
    READLINKAT = 305,
    FCHMODAT = 306,
    FACCESSAT = 307,
    PSELECT6 = 308,
    PPOLL = 309,
    UNSHARE = 310,
    SET_ROBUST_LIST = 311,
    GET_ROBUST_LIST = 312,
    SPLICE = 313,
    SYNC_FILE_RANGE = 314,
    TEE = 315,
    VMSPLICE = 316,
    MOVE_PAGES = 317,
    GETCPU = 318,
    EPOLL_PWAIT = 319,
    FALLOCATE = 324,
    EVENTFD2 = 328,
    EPOLL_CREATE1 = 329,
    DUP3 = 330,
    PIPE2 = 331,
    INOTIFY_INIT1 = 332,
    GETRANDOM = 355,
    STATX = 383,
    SOCKET = 500,
    CONNECT = 501,
    ACCEPT = 502,
    SENDTO = 503,
    RECVFROM = 504,
    SENDMSG = 505,
    RECVMSG = 506,
    SHUTDOWN = 507,
    BIND = 508,
    LISTEN = 509,
    GETSOCKNAME = 510,
    GETPEERNAME = 511,
    SOCKETPAIR = 512,
    SETSOCKOPT = 513,
    GETSOCKOPT = 514,
    RECV = 515,
    SHMGET = 520,
    SHMAT = 521,
    SHMCTL = 522,
    SEMGET = 523,
    SEMOP = 524,
    SEMCTL = 525,
    SHMDT = 527,
    MSGGET = 528,
    MSGSND = 529,
    MSGRCV = 530,
    MSGCTL = 531,
    SEMTIMEDOP = 532,
    NEWFSTATAT = 540,
  };

  SysCallId() : m_syscall_value(NO_SYSCALL) {};

  SysCallId(int16_t _syscall_id) {
    m_syscall_value = static_cast<syscall_no>(_syscall_id);
  }

  constexpr SysCallId(syscall_no _syscall_id) : m_syscall_value(_syscall_id) {}

  virtual ~SysCallId() {
    m_syscall_value = NO_SYSCALL;
  };

  std::string getString() const;
  bool hasValue(syscall_no value);
  syscall_no getValue() const;
  
  int16_t getIntValue() { 
    return static_cast<int16_t>(m_syscall_value); 
  };

  bool operator==(const SysCallId& rhs) const;
  bool operator!=(const SysCallId& rhs) const;

  bool operator<(const SysCallId& otherObj) {
    return m_syscall_value < otherObj.m_syscall_value;
  };

  void setValue(int16_t _syscall_id) {
    m_syscall_value = static_cast<syscall_no>(_syscall_id);
  };

  size_t hash() const {
      return std::hash<std::int16_t>()(m_syscall_value);
  }

private:
  syscall_no m_syscall_value = NO_SYSCALL;
};



/**
 * Note the above enum implementation has been taken from below blog
 * https://medium.com/@niedoba.lukas/next-level-c-enums-a5208fbc0190
*/

#endif